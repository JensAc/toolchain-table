language:
    - cpp

env:
    - TOOLCHAIN=default
    - TOOLCHAIN=libcxx
    - TOOLCHAIN=clang-libstdcxx
    - TOOLCHAIN=gcc
    - TOOLCHAIN=gcc48
    - TOOLCHAIN=analyze
    - TOOLCHAIN=sanitize_address
    - TOOLCHAIN=sanitize_leak
    - TOOLCHAIN=sanitize_memory
    - TOOLCHAIN=sanitize_thread

install:
    - sudo apt-get install cmake
    - sudo apt-get install libcurl3-dev
    # install cmake
    - CMAKE_VERSION="3.0.0-ios-universal"
    - wget https://github.com/ruslo/CMake/archive/v${CMAKE_VERSION}.tar.gz
    - openssl sha1 v${CMAKE_VERSION}.tar.gz
    - tar xf v${CMAKE_VERSION}.tar.gz
    - cmake -HCMake-${CMAKE_VERSION} -B_builds-cmake -DCMAKE_USE_SYSTEM_CURL=YES -DCMAKE_BUILD_TYPE=Release
    - cmake --build _builds-cmake
    - sudo cmake --build _builds-cmake --target install
    # -- end
    # verify installed cmake
    - which cmake
    - cmake --version
    # -- end
    # install cmake toolchains
    - POLLY_VERSION="0.3.1"
    - wget https://github.com/ruslo/polly/archive/v${POLLY_VERSION}.tar.gz
    - tar xf v${POLLY_VERSION}.tar.gz
    - export POLLY_ROOT=`pwd`/polly-${POLLY_VERSION}
    # -- end

script:
    - cmake -H. -B_builds -DCMAKE_TOOLCHAIN_FILE=${POLLY_ROOT}/${TOOLCHAIN}.cmake -DCMAKE_VERBOSE_MAKEFILE=ON
    - cmake --build _builds
    - cd _builds
    - ctest -VV -C ${BUILD_TYPE}
